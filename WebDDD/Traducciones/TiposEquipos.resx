<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Crear_tipo_equipo" xml:space="preserve">
    <value>New Device Type</value>
  </data>
  <data name="Descripcion_borrado" xml:space="preserve">
    <value>Delete an existing device type</value>
  </data>
  <data name="Descripcion_creacion" xml:space="preserve">
    <value>Create a new device type</value>
  </data>
  <data name="Descripcion_detalles" xml:space="preserve">
    <value>Information about an existing device type</value>
  </data>
  <data name="Descripcion_edicion" xml:space="preserve">
    <value>Edit an existing device type</value>
  </data>
  <data name="Descripcion_index" xml:space="preserve">
    <value>Devices types stored in system</value>
  </data>
  <data name="Editar_tipo_equipo" xml:space="preserve">
    <value>Edit Device Type</value>
  </data>
  <data name="Eliminar_tipo_equipo" xml:space="preserve">
    <value>Delete Device type</value>
  </data>
  <data name="Encabezado_borrado" xml:space="preserve">
    <value>Are you sure you want to delete the information for the selected device type?</value>
  </data>
  <data name="Encabezado_creacion" xml:space="preserve">
    <value>Enter the information for the new device type below</value>
  </data>
  <data name="Encabezado_detalles" xml:space="preserve">
    <value>The information for the selected device type is shown below</value>
  </data>
  <data name="Encabezado_edicion" xml:space="preserve">
    <value>Modify the information you want to edit in the device type below</value>
  </data>
  <data name="Tipos_equipos" xml:space="preserve">
    <value>Devices Types</value>
  </data>
  <data name="Tipo_equipo" xml:space="preserve">
    <value>Device Type</value>
  </data>
  <data name="Tipo_equipo_creado_error" xml:space="preserve">
    <value>The device type {0} has not been created.</value>
  </data>
  <data name="Tipo_equipo_creado_exito" xml:space="preserve">
    <value>The device type  {0} has been successfully created.</value>
  </data>
  <data name="Tipo_equipo_editado_error" xml:space="preserve">
    <value>The device type {0} has not been edited.</value>
  </data>
  <data name="Tipo_equipo_editado_exito" xml:space="preserve">
    <value>The device type {0} has been successfully edited.</value>
  </data>
  <data name="Tipo_equipo_eliminado_error" xml:space="preserve">
    <value>The device type {0} has not been deleted.</value>
  </data>
  <data name="Tipo_equipo_eliminado_exito" xml:space="preserve">
    <value>The device type {0} has been successfully deleted.</value>
  </data>
  <data name="Tipo_equipo_pagina" xml:space="preserve">
    <value>Devices typer per page</value>
  </data>
  <data name="Validacion_nombre" xml:space="preserve">
    <value>Only letters (uppercase and lowercase), numbers, spaces and characters &amp;'- are allowed for the Name</value>
  </data>
  <data name="Advertencia_tiene_equipos" xml:space="preserve">
    <value>The device type {0} that you want to delete has associated devices; if you delete it, those devices will also be deleted, are you sure?</value>
  </data>
  <data name="Lector_fijo" xml:space="preserve">
    <value>Fixed Reader</value>
  </data>
  <data name="Lector_de_mano" xml:space="preserve">
    <value>Handheld Reader</value>
  </data>
  <data name="Tablet" xml:space="preserve">
    <value>Tablet</value>
  </data>
  <data name="Fijo" xml:space="preserve">
    <value>Fixed Reader</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Handheld Reader</value>
  </data>
  <data name="Lector" xml:space="preserve">
    <value>Reader</value>
  </data>
  <data name="Lector_ip" xml:space="preserve">
    <value>Fixed IP Reader</value>
  </data>
  <data name="Lector_fijo_serie" xml:space="preserve">
    <value>Fixed Serial Reader</value>
  </data>
  <data name="No_fijo" xml:space="preserve">
    <value>No Fixed Reader</value>
  </data>
  <data name="Lector_4G" xml:space="preserve">
    <value>4G Reader</value>
  </data>
  <data name="Grupo" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="Lector_colmena" xml:space="preserve">
    <value>Swarm Reader</value>
  </data>
  <data name="Colmena" xml:space="preserve">
    <value>Swarm Reader</value>
  </data>
  <data name="CuatroG" xml:space="preserve">
    <value>4G Reader</value>
  </data>
  <data name="FijoSerie" xml:space="preserve">
    <value>Fixed Serial Reader</value>
  </data>
</root>