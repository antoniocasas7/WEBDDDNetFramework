<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Crear_marca" xml:space="preserve">
    <value>New Brand</value>
  </data>
  <data name="Descripcion_borrado" xml:space="preserve">
    <value>Delete an existing brand</value>
  </data>
  <data name="Descripcion_detalles" xml:space="preserve">
    <value>Information about an existing brand</value>
  </data>
  <data name="Descripcion_index" xml:space="preserve">
    <value>Brands stored in system</value>
  </data>
  <data name="Editar_marca" xml:space="preserve">
    <value>Edit Brand</value>
  </data>
  <data name="Eliminar_marca" xml:space="preserve">
    <value>Delete Brand</value>
  </data>
  <data name="Encabezado_borrado" xml:space="preserve">
    <value>Are you sure you want to delete the information for the selected brand?</value>
  </data>
  <data name="Encabezado_creacion" xml:space="preserve">
    <value>Enter the information for the new brand below</value>
  </data>
  <data name="Encabezado_detalles" xml:space="preserve">
    <value>The information for the selected brand is shown below</value>
  </data>
  <data name="Encabezado_edicion" xml:space="preserve">
    <value>Modify the information you want to edit in the brand below</value>
  </data>
  <data name="Marca" xml:space="preserve">
    <value>Brands</value>
  </data>
  <data name="Marcas_pagina" xml:space="preserve">
    <value>Brands per page:</value>
  </data>
  <data name="Marca_creada_error" xml:space="preserve">
    <value>The brand {0} has not been created.</value>
  </data>
  <data name="Marca_creada_exito" xml:space="preserve">
    <value>The brand {0} has been successfully created.</value>
  </data>
  <data name="Marca_editada_error" xml:space="preserve">
    <value>The brand {0} has not been edited.</value>
  </data>
  <data name="Marca_editada_exito" xml:space="preserve">
    <value>The brand {0} has been successfully edited.</value>
  </data>
  <data name="Marca_eliminada_error" xml:space="preserve">
    <value>The brand {0} has not been deleted.</value>
  </data>
  <data name="Marca_eliminada_exito" xml:space="preserve">
    <value>The brand {0} has been successfully deleted.</value>
  </data>
  <data name="Nombre" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Referencia" xml:space="preserve">
    <value>Reference</value>
  </data>
  <data name="Nombre_repetido" xml:space="preserve">
    <value>The brand's name is already in use.</value>
  </data>
  <data name="Error_marca_modelos" xml:space="preserve">
    <value>The brand {0} has associated models. You can not remove it.</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Fichero" xml:space="preserve">
    <value>Zip File</value>
  </data>
  <data name="Referencia_repetida" xml:space="preserve">
    <value>The brand's reference is already in use.</value>
  </data>
  <data name="Validacion_referencia" xml:space="preserve">
    <value>Only letters (uppercase and lowercase) are allowed for the Reference</value>
  </data>
  <data name="Referencia_no_encontrada" xml:space="preserve">
    <value>Reference not found</value>
  </data>
  <data name="Marca_simple" xml:space="preserve">
    <value>Brand</value>
  </data>
  <data name="Informacion_referencia_fichero" xml:space="preserve">
    <value>* If the reference of the brand is established, you must necessarily provide a new zip file and vice versa, which will increase the brand's version. On the other hand if you delete the reference and do not provide any zip file, the reference, version and file of the brand will be set as null.</value>
  </data>
</root>